[prompt_few_shot]
template = """
{{ base_prompt }}

Below are similar past examples of buggy Java snippets and their fixes. Refer to these examples during repair.

#### Similar Past Fixes
{% for example in similar_examples %}
**Example {{ loop.index }}**
**Buggy Code:**
{{ example.buggy_code }}

**Fixed Code:**
{{ example.fixed_code }}

{% endfor %}
"""

[prompt_few_shot_feedback]
template = """
You are given a buggy Java code snippet along with examples of similar past fixes. Your task is to repair the code by leveraging the patterns demonstrated in the past examples.

Follow these steps precisely:
1. Carefully read the previous Java code attempt below.
2. Below are similar past examples of buggy Java snippets and their fixes. Refer to these examples during repair.
3. Determine whether the error relates to this specific hunk or another part of the multi-hunk context.
4. If this hunk is responsible, correct the code accordingly. If not, ensure this hunk is still correctly implemented and ready to integrate with other code fixes.
5. You may introduce necessary changes such as new imports, updated variable references, or method signatures—but **only if required** to resolve the compilation error.
6. Maintain the original Java formatting, naming conventions, and structure. Do not rewrite or reorder unrelated parts.
7. Your output must contain only the corrected Java code—**no comments, no explanations, no markdown, no triple backticks**.
8. You must **not change the Java version, formatting, or naming conventions**. This includes, but is not limited to:
   - Do NOT replace traditional for-loops with enhanced for-loops (e.g., `for (int i = 0; ... )` → `for (int x : list)`)
   - Do NOT use the diamond operator (`<>`) if the original code does not use it.
   - Do NOT change collections or APIs to use generics or streams if not originally used.
   - Do NOT replace `Hashtable`, `Vector`, `Enumeration`, or other legacy classes with modern equivalents.
   - Do NOT reformat, re-indent, or otherwise cosmetically alter unchanged code.
   - Do NOT change the use of anonymous classes to lambda expressions.
   - Do NOT import new classes, use new libraries, or alter package structures.  

Previous Code Attempt:
{{ last_code }}

#### Similar Past Fixes
{% for example in similar_examples %}
**Example {{ loop.index }}**
**Buggy Code:**
{{ example.buggy_code }}

**Fixed Code:**
{{ example.fixed_code }}

{% endfor %}
"""
